"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = require('angular2/core');
var common_1 = require('angular2/common');
var pagination_component_1 = require('./pagination.component');
var pager_component_1 = require('./pager.component');
var Angular2Pagination = (function () {
    function Angular2Pagination() {
        this.slides = [];
        this.currentSelectedPage = "";
        this.currentItemsPerPage = "";
        this.maxSize = 3;
        this.totalResults = 60;
        this.currentPage = 2;
        this.slides.push({ image: 'http://www.angulartypescript.com/wp-content/uploads/2016/03/car1.jpg', text: 'BMW 1' }, { image: 'http://www.angulartypescript.com/wp-content/uploads/2016/03/car2.jpg', text: 'BMW 2' }, { image: 'http://www.angulartypescript.com/wp-content/uploads/2016/03/car3.jpg', text: 'BMW 3' }, { image: 'http://www.angulartypescript.com/wp-content/uploads/2016/03/car4.jpg', text: 'BMW 4' }, { image: 'http://www.angulartypescript.com/wp-content/uploads/2016/03/car5.jpg', text: 'BMW 5' }, { image: 'http://www.angulartypescript.com/wp-content/uploads/2016/03/car6.jpg', text: 'BMW 6' });
    }
    Angular2Pagination.prototype.setCurrentPage = function (pageNo) {
        this.currentPage = pageNo;
    };
    ;
    Angular2Pagination.prototype.currentPageChanged = function (event) {
        this.currentSelectedPage = ' is : ' + event.page;
        this.currentItemsPerPage = ' is : ' + event.itemsPerPage;
    };
    ;
    Angular2Pagination = __decorate([
        core_1.Component({
            selector: 'my-app',
            template: "\n                <div class=\"row\">\n\n                    <h4>Angular 2 Pagination Example</h4> <br>\n                    <span class=\"text-danger\"> The selected page<span class=\"badge\">{{currentSelectedPage}}</span> </span> <br>\n                    <span class=\"text-danger\"> Totoal items per page<span class=\"badge\">{{currentItemsPerPage}}</span> </span> <br>\n\n                    <div class=\"form-group\">\n                    <img [src]=\"slides[currentPage-1].image\" style=\"margin:auto;\">\n                    </div>\n                    <div class=\"form-group\">\n                    <pagination [boundaryLinks]=\"true\" [totalItems]=\"totalResults\"\n                                [(ngModel)]=\"currentPage\" (pageChanged)=\"currentPageChanged($event)\"\n                                [maxSize]=\"maxSize\"\n                                ></pagination>\n                                <br>\n                    <button type=\"button\" class=\"btn btn-info\" (click)=\"setCurrentPage(2)\">Set the current page <span class=\"badge\">to: 2</span></button> <br>\n\n                    <br>\n                    </div>\n                    <div class=\"form-group\" style=\"float: left\">\n                    <h4>Angular 2 Pager Example</h4>\n                    <pager [totalItems]=\"totalResults\" [(ngModel)]=\"currentPage\" onPageChanged=\"currentPageChanged($event)\"></pager>\n                    </div>\n\n                </div>\n\n             ",
            directives: [pagination_component_1.Pagination, pager_component_1.Pager, common_1.FORM_DIRECTIVES, common_1.CORE_DIRECTIVES],
        }), 
        __metadata('design:paramtypes', [])
    ], Angular2Pagination);
    return Angular2Pagination;
}());
exports.Angular2Pagination = Angular2Pagination;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC9zaGFyZWQvcGFnaW5hdGlvbi9wYWdpbmF0aW9uLWV4YW1wbGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUdBLHFCQUF3QixlQUFlLENBQUMsQ0FBQTtBQUN4Qyx1QkFBK0MsaUJBQWlCLENBQUMsQ0FBQTtBQUNqRSxxQ0FBeUIsd0JBQXdCLENBQUMsQ0FBQTtBQUNsRCxnQ0FBb0IsbUJBQW1CLENBQUMsQ0FBQTtBQWtDeEM7SUFjSTtRQVpRLFdBQU0sR0FBYyxFQUFFLENBQUM7UUFFL0Isd0JBQW1CLEdBQVEsRUFBRSxDQUFDO1FBRTlCLHdCQUFtQixHQUFRLEVBQUUsQ0FBQztRQUV0QixZQUFPLEdBQVUsQ0FBQyxDQUFDO1FBRW5CLGlCQUFZLEdBQVUsRUFBRSxDQUFDO1FBRXpCLGdCQUFXLEdBQVUsQ0FBQyxDQUFDO1FBRzNCLElBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUNaLEVBQUMsS0FBSyxFQUFDLHNFQUFzRSxFQUFDLElBQUksRUFBQyxPQUFPLEVBQUMsRUFDM0YsRUFBQyxLQUFLLEVBQUMsc0VBQXNFLEVBQUMsSUFBSSxFQUFDLE9BQU8sRUFBQyxFQUMzRixFQUFDLEtBQUssRUFBQyxzRUFBc0UsRUFBQyxJQUFJLEVBQUMsT0FBTyxFQUFDLEVBQzNGLEVBQUMsS0FBSyxFQUFDLHNFQUFzRSxFQUFDLElBQUksRUFBQyxPQUFPLEVBQUMsRUFDM0YsRUFBQyxLQUFLLEVBQUMsc0VBQXNFLEVBQUMsSUFBSSxFQUFDLE9BQU8sRUFBQyxFQUMzRixFQUFDLEtBQUssRUFBQyxzRUFBc0UsRUFBQyxJQUFJLEVBQUMsT0FBTyxFQUFDLENBQzlGLENBQUM7SUFDTixDQUFDO0lBRU8sMkNBQWMsR0FBdEIsVUFBdUIsTUFBYTtRQUNoQyxJQUFJLENBQUMsV0FBVyxHQUFHLE1BQU0sQ0FBQztJQUM5QixDQUFDOztJQUVPLCtDQUFrQixHQUExQixVQUEyQixLQUFTO1FBQ2hDLElBQUksQ0FBQyxtQkFBbUIsR0FBRyxRQUFRLEdBQUcsS0FBSyxDQUFDLElBQUksQ0FBQztRQUNqRCxJQUFJLENBQUMsbUJBQW1CLEdBQUcsUUFBUSxHQUFJLEtBQUssQ0FBQyxZQUFZLENBQUM7SUFDOUQsQ0FBQzs7SUFoRUw7UUFBQyxnQkFBUyxDQUFDO1lBQ1AsUUFBUSxFQUFFLFFBQVE7WUFDbEIsUUFBUSxFQUFDLDI4Q0EyQkM7WUFDVixVQUFVLEVBQUUsQ0FBQyxpQ0FBVSxFQUFFLHVCQUFLLEVBQUUsd0JBQWUsRUFBRSx3QkFBZSxDQUFDO1NBQ3BFLENBQUM7OzBCQUFBO0lBa0NGLHlCQUFDO0FBQUQsQ0FqQ0EsQUFpQ0MsSUFBQTtBQWpDWSwwQkFBa0IscUJBaUM5QixDQUFBIiwiZmlsZSI6ImFwcC9zaGFyZWQvcGFnaW5hdGlvbi9wYWdpbmF0aW9uLWV4YW1wbGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENyZWF0ZWQgYnkgVGFyZXEgQm91bGFramFyLiBmcm9tIGFuZ3VsYXJ0eXBlc2NyaXB0LmNvbVxuICovXG5pbXBvcnQge0NvbXBvbmVudH0gZnJvbSAnYW5ndWxhcjIvY29yZSc7XG5pbXBvcnQge0NPUkVfRElSRUNUSVZFUywgRk9STV9ESVJFQ1RJVkVTfSBmcm9tICdhbmd1bGFyMi9jb21tb24nO1xuaW1wb3J0IHtQYWdpbmF0aW9ufSBmcm9tICcuL3BhZ2luYXRpb24uY29tcG9uZW50JztcbmltcG9ydCB7UGFnZXJ9IGZyb20gJy4vcGFnZXIuY29tcG9uZW50Jztcbi8qQW5ndWxhciAyIFBhZ2luYXRpb24gRXhhbXBsZSovXG5AQ29tcG9uZW50KHtcbiAgICBzZWxlY3RvcjogJ215LWFwcCcsXG4gICAgdGVtcGxhdGU6YFxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJyb3dcIj5cblxuICAgICAgICAgICAgICAgICAgICA8aDQ+QW5ndWxhciAyIFBhZ2luYXRpb24gRXhhbXBsZTwvaDQ+IDxicj5cbiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9XCJ0ZXh0LWRhbmdlclwiPiBUaGUgc2VsZWN0ZWQgcGFnZTxzcGFuIGNsYXNzPVwiYmFkZ2VcIj57e2N1cnJlbnRTZWxlY3RlZFBhZ2V9fTwvc3Bhbj4gPC9zcGFuPiA8YnI+XG4gICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPVwidGV4dC1kYW5nZXJcIj4gVG90b2FsIGl0ZW1zIHBlciBwYWdlPHNwYW4gY2xhc3M9XCJiYWRnZVwiPnt7Y3VycmVudEl0ZW1zUGVyUGFnZX19PC9zcGFuPiA8L3NwYW4+IDxicj5cblxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZm9ybS1ncm91cFwiPlxuICAgICAgICAgICAgICAgICAgICA8aW1nIFtzcmNdPVwic2xpZGVzW2N1cnJlbnRQYWdlLTFdLmltYWdlXCIgc3R5bGU9XCJtYXJnaW46YXV0bztcIj5cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJmb3JtLWdyb3VwXCI+XG4gICAgICAgICAgICAgICAgICAgIDxwYWdpbmF0aW9uIFtib3VuZGFyeUxpbmtzXT1cInRydWVcIiBbdG90YWxJdGVtc109XCJ0b3RhbFJlc3VsdHNcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBbKG5nTW9kZWwpXT1cImN1cnJlbnRQYWdlXCIgKHBhZ2VDaGFuZ2VkKT1cImN1cnJlbnRQYWdlQ2hhbmdlZCgkZXZlbnQpXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgW21heFNpemVdPVwibWF4U2l6ZVwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID48L3BhZ2luYXRpb24+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxicj5cbiAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiB0eXBlPVwiYnV0dG9uXCIgY2xhc3M9XCJidG4gYnRuLWluZm9cIiAoY2xpY2spPVwic2V0Q3VycmVudFBhZ2UoMilcIj5TZXQgdGhlIGN1cnJlbnQgcGFnZSA8c3BhbiBjbGFzcz1cImJhZGdlXCI+dG86IDI8L3NwYW4+PC9idXR0b24+IDxicj5cblxuICAgICAgICAgICAgICAgICAgICA8YnI+XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZm9ybS1ncm91cFwiIHN0eWxlPVwiZmxvYXQ6IGxlZnRcIj5cbiAgICAgICAgICAgICAgICAgICAgPGg0PkFuZ3VsYXIgMiBQYWdlciBFeGFtcGxlPC9oND5cbiAgICAgICAgICAgICAgICAgICAgPHBhZ2VyIFt0b3RhbEl0ZW1zXT1cInRvdGFsUmVzdWx0c1wiIFsobmdNb2RlbCldPVwiY3VycmVudFBhZ2VcIiBvblBhZ2VDaGFuZ2VkPVwiY3VycmVudFBhZ2VDaGFuZ2VkKCRldmVudClcIj48L3BhZ2VyPlxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgICAgICAgIDwvZGl2PlxuXG4gICAgICAgICAgICAgYCxcbiAgICBkaXJlY3RpdmVzOiBbUGFnaW5hdGlvbiwgUGFnZXIsIEZPUk1fRElSRUNUSVZFUywgQ09SRV9ESVJFQ1RJVkVTXSxcbn0pXG5leHBvcnQgY2xhc3MgQW5ndWxhcjJQYWdpbmF0aW9uICB7XG4gICAgLy90aGlzIGFycmF5IGNvbnRhaW5zIHRoZSBpbWFnZSB3ZSB3aWxsIHNob3cgZm9yIGVhY2ggcGFnZVxuICAgIHByaXZhdGUgc2xpZGVzOkFycmF5PGFueT4gPSBbXTtcbiAgICAvL3ByaW50IHRvIHRoZSB1c2VyIHRoZSBzZWxlY3RlZCBwYWdlXG4gICAgY3VycmVudFNlbGVjdGVkUGFnZTpzdHJpbmc9XCJcIjtcbiAgICAvL3ByaW50IHRvIHRoZSB1c2VyIHRoZSB0b3RhbCBpdGVybXMgcGVyIHBhZ2VcbiAgICBjdXJyZW50SXRlbXNQZXJQYWdlOnN0cmluZz1cIlwiO1xuICAgIC8vdGhlIG1heGltdW0gYnV0dG9ucyB0byBzaG93XG4gICAgcHJpdmF0ZSBtYXhTaXplOm51bWJlciA9IDM7XG4gICAgLy90aGUgbnVtYmVyIG9mIHBhZ2VzIHlvdSB3YW50IHRvIHByaW50XG4gICAgcHJpdmF0ZSB0b3RhbFJlc3VsdHM6bnVtYmVyID0gNjA7XG4gICAgLy90aGUgY3VycmVudCBwYWdlXG4gICAgcHJpdmF0ZSBjdXJyZW50UGFnZTpudW1iZXIgPSAyO1xuXG4gICAgY29uc3RydWN0b3IgKCkge1xuICAgICAgICB0aGlzLnNsaWRlcy5wdXNoKFxuICAgICAgICAgICAge2ltYWdlOidodHRwOi8vd3d3LmFuZ3VsYXJ0eXBlc2NyaXB0LmNvbS93cC1jb250ZW50L3VwbG9hZHMvMjAxNi8wMy9jYXIxLmpwZycsdGV4dDonQk1XIDEnfSxcbiAgICAgICAgICAgIHtpbWFnZTonaHR0cDovL3d3dy5hbmd1bGFydHlwZXNjcmlwdC5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMTYvMDMvY2FyMi5qcGcnLHRleHQ6J0JNVyAyJ30sXG4gICAgICAgICAgICB7aW1hZ2U6J2h0dHA6Ly93d3cuYW5ndWxhcnR5cGVzY3JpcHQuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDE2LzAzL2NhcjMuanBnJyx0ZXh0OidCTVcgMyd9LFxuICAgICAgICAgICAge2ltYWdlOidodHRwOi8vd3d3LmFuZ3VsYXJ0eXBlc2NyaXB0LmNvbS93cC1jb250ZW50L3VwbG9hZHMvMjAxNi8wMy9jYXI0LmpwZycsdGV4dDonQk1XIDQnfSxcbiAgICAgICAgICAgIHtpbWFnZTonaHR0cDovL3d3dy5hbmd1bGFydHlwZXNjcmlwdC5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMTYvMDMvY2FyNS5qcGcnLHRleHQ6J0JNVyA1J30sXG4gICAgICAgICAgICB7aW1hZ2U6J2h0dHA6Ly93d3cuYW5ndWxhcnR5cGVzY3JpcHQuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDE2LzAzL2NhcjYuanBnJyx0ZXh0OidCTVcgNid9XG4gICAgICAgICk7XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBzZXRDdXJyZW50UGFnZShwYWdlTm86bnVtYmVyKTp2b2lkIHtcbiAgICAgICAgdGhpcy5jdXJyZW50UGFnZSA9IHBhZ2VObztcbiAgICB9O1xuXG4gICAgcHJpdmF0ZSBjdXJyZW50UGFnZUNoYW5nZWQoZXZlbnQ6YW55KTp2b2lkIHtcbiAgICAgICAgdGhpcy5jdXJyZW50U2VsZWN0ZWRQYWdlID0gJyBpcyA6ICcgKyBldmVudC5wYWdlO1xuICAgICAgICB0aGlzLmN1cnJlbnRJdGVtc1BlclBhZ2UgPSAnIGlzIDogJyArICBldmVudC5pdGVtc1BlclBhZ2U7XG4gICAgfTtcbn0iXX0=
